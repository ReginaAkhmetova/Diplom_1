import allure


class TestDatabase:
    # Так как предоставленный класс Database по сути сам является тестовым (там просто
    # нахардкожены значения), то тестировать там, по сути, нечего - в реальности этот
    # класс (Database) должен ходить в базу, и методы available_buns и
    # available_ingredients, соответственно, селектить данные из базы. Как я полагаю,
    # нам дали упрощенный вариант для простоты изучения.
    # В реальности мы чаще всего не можем протестировать набор данных из базы, потому что
    # этот набор данных меняется (он "живет").
    # Зато мы можем протестировать корректность работы метода - хотя бы проверить тип
    # возвращаемого результата - что возвращается list.

    # PS. тестировать, что метод available_buns() возвращает список, равный списку
    #     из Database().buns (self.buns) - не вижу никакого смысла, потому что в реальности
    #     в Database() не будет никакого статичного .buns, а метод на самом деле будет
    #     идти в базу, селектить, и возвращать результат. То же самое и про второй метод.

    @allure.title("Проверка доступных булок для бургера")
    def test_available_buns(self, test_database_conn):
        assert isinstance(test_database_conn.available_buns(), list)

    @allure.title("Проверка доступных соусов для бургера")
    def test_available_ingredients(self, test_database_conn):
        assert isinstance(test_database_conn.available_ingredients(), list)
